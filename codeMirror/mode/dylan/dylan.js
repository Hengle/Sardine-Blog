(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(A){A.defineMode("dylan",function(N){var L={unnamedDefinition:["interface"],namedDefinition:["module","library","macro","C-struct","C-union","C-function","C-callable-wrapper"],typeParameterizedDefinition:["class","C-subtype","C-mapped-subtype"],otherParameterizedDefinition:["method","function","C-variable","C-address"],constantSimpleDefinition:["constant"],variableSimpleDefinition:["variable"],otherSimpleDefinition:["generic","domain","C-pointer-type","table"],statement:["if","block","begin","method","case","for","select","when","unless","until","while","iterate","profiling","dynamic-bind"],separator:["finally","exception","cleanup","else","elseif","afterwards"],other:["above","below","by","from","handler","in","instance","let","local","otherwise","slot","subclass","then","to","keyed-by","virtual"],signalingCalls:["signal","error","cerror","break","check-type","abort"]};L["otherDefinition"]=L["unnamedDefinition"].concat(L["namedDefinition"]).concat(L["otherParameterizedDefinition"]);L["definition"]=L["typeParameterizedDefinition"].concat(L["otherDefinition"]);L["parameterizedDefinition"]=L["typeParameterizedDefinition"].concat(L["otherParameterizedDefinition"]);L["simpleDefinition"]=L["constantSimpleDefinition"].concat(L["variableSimpleDefinition"]).concat(L["otherSimpleDefinition"]);L["keyword"]=L["statement"].concat(L["separator"]).concat(L["other"]);var F="[-_a-zA-Z?!*@<>$%]+";var J=new RegExp("^"+F);var E={symbolKeyword:F+":",symbolClass:"<"+F+">",symbolGlobal:"\\*"+F+"\\*",symbolConstant:"\\$"+F};var O={symbolKeyword:"atom",symbolClass:"tag",symbolGlobal:"variable-2",symbolConstant:"variable-3"};for(var D in E){if(E.hasOwnProperty(D)){E[D]=new RegExp("^"+E[D])}}E["keyword"]=[/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];var C={};C["keyword"]="keyword";C["definition"]="def";C["simpleDefinition"]="def";C["signalingCalls"]="builtin";var B={};var G={};["keyword","definition","simpleDefinition","signalingCalls"].forEach(function(P){L[P].forEach(function(Q){B[Q]=P;G[Q]=C[P]})});function K(R,Q,P){Q.tokenize=P;return P(R,Q)}function I(T,R){var Q=T.peek();if(Q=="'"||Q=='"'){T.next();return K(T,R,M(Q,"string"))}else{if(Q=="/"){T.next();if(T.eat("*")){return K(T,R,H)}else{if(T.eat("/")){T.skipToEnd();return"comment"}else{T.skipTo(" ");return"operator"}}}else{if(/\d/.test(Q)){T.match(/^\d*(?:\.\d*)?(?:e[+\-]?\d+)?/);return"number"}else{if(Q=="#"){T.next();Q=T.peek();if(Q=='"'){T.next();return K(T,R,M('"',"string-2"))}else{if(Q=="b"){T.next();T.eatWhile(/[01]/);return"number"}else{if(Q=="x"){T.next();T.eatWhile(/[\da-f]/i);return"number"}else{if(Q=="o"){T.next();T.eatWhile(/[0-7]/);return"number"}else{T.eatWhile(/[-a-zA-Z]/);return"keyword"}}}}}else{if(T.match("end")){return"keyword"}}}}}for(var P in E){if(E.hasOwnProperty(P)){var S=E[P];if((S instanceof Array&&S.some(function(U){return T.match(U)}))||T.match(S)){return O[P]}}}if(T.match("define")){return"def"}else{T.eatWhile(/[\w\-]/);if(B[T.current()]){return G[T.current()]}else{if(T.current().match(J)){return"variable"}else{T.next();return"variable-2"}}}}function H(S,Q){var R=false,P;while((P=S.next())){if(P=="/"&&R){Q.tokenize=I;break}R=(P=="*")}return"comment"}function M(P,Q){return function(U,T){var S,R=false;while((S=U.next())!=null){if(S==P){R=true;break}}if(R){T.tokenize=I}return Q}}return{startState:function(){return{tokenize:I,currentIndent:0}},token:function(R,Q){if(R.eatSpace()){return null}var P=Q.tokenize(R,Q);return P},blockCommentStart:"/*",blockCommentEnd:"*/"}});A.defineMIME("text/x-dylan","dylan")});