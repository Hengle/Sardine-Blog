(function(A){if(typeof exports=="object"&&typeof module=="object"){A(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],A)}else{A(CodeMirror)}}})(function(E){var A="CodeMirror-activeline";var G="CodeMirror-activeline-background";E.defineOption("styleActiveLine",false,function(K,J,I){var H=I&&I!=E.Init;if(J&&!H){K.state.activeLines=[];C(K,K.listSelections());K.on("beforeSelectionChange",F)}else{if(!J&&H){K.off("beforeSelectionChange",F);D(K);delete K.state.activeLines}}});function D(I){for(var H=0;H<I.state.activeLines.length;H++){I.removeLineClass(I.state.activeLines[H],"wrap",A);I.removeLineClass(I.state.activeLines[H],"background",G)}}function B(J,I){if(J.length!=I.length){return false}for(var H=0;H<J.length;H++){if(J[H]!=I[H]){return false}}return true}function C(L,J){var I=[];for(var H=0;H<J.length;H++){var M=J[H];if(!M.empty()){continue}var K=L.getLineHandleVisualStart(M.head.line);if(I[I.length-1]!=K){I.push(K)}}if(B(L.state.activeLines,I)){return}L.operation(function(){D(L);for(var N=0;N<I.length;N++){L.addLineClass(I[N],"wrap",A);L.addLineClass(I[N],"background",G)}L.state.activeLines=I})}function F(I,H){C(I,H.ranges)}});